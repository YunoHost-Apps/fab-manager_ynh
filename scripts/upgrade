#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

admin_mail=$(ynh_user_get_info --username="$admin" --key=mail)

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="${app}-app" --action="stop" --log_path=systemd
ynh_systemctl --service="${app}-worker" --action="stop" --log_path=systemd

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if ynh_hide_warnings yunohost service status "$app" >/dev/null; then
    ynh_script_progression "Removing $app service integration..."
    yunohost service remove "$app"
fi

ynh_config_remove_logrotate

ynh_safe_rm "/etc/supervisor/conf.d/$app.conf"
ynh_safe_rm "/var/log/supervisor/$app-app-stderr.log"
ynh_safe_rm "/var/log/supervisor/$app-app-stdout.log"
ynh_safe_rm "/var/log/supervisor/$app-worker-stderr.log"
ynh_safe_rm "/var/log/supervisor/$app-worker-stdout.log"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Updating NodeJS..."
ynh_nodejs_install

ynh_script_progression "Updating Ruby..."
ynh_ruby_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="config/secrets.yml config/database.yml"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

ynh_config_add --template="secrets.yml" --destination="$install_dir/config/secrets.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config/secrets.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/config/secrets.yml"

ynh_config_add --template="database.yml" --destination="$install_dir/config/database.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config/database.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/config/database.yml"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building app..."

ynh_safe_rm "$install_dir/.cache"
ynh_safe_rm "$install_dir/node_modules"
ynh_safe_rm "$install_dir/tmp/cache"

fabmanager_build_ruby

fabmanager_migrate_db

fabmanager_build_ui

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd --service="$app-app" --template="fab-manager-app.service"
ynh_config_add_systemd --service="$app-worker" --template="fab-manager-worker.service"
yunohost service add "$app-app" --description="$app app service"
yunohost service add "$app-worker" --description="$app worker service"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="${app}-app" --action="start" --log_path=systemd
ynh_systemctl --service="${app}-worker" --action="start" --log_path=systemd --wait_until="Schedules Loaded"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
