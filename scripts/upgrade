#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_ruby__2
source ynh_supervisor
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=${app}-app --action="stop" --log_path=systemd --line_match="Stopped"
ynh_systemd_action --service_name=${app}-worker --action="stop" --log_path=systemd --line_match="Stopped"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if ynh_exec_warn_less yunohost service status $app >/dev/null
then
	ynh_script_progression --message="Removing $app service integration..."
	yunohost service remove $app
fi

ynh_remove_logrotate

ynh_remove_supervisor_config

ynh_secure_remove --file="/var/log/supervisor/$app-app-stderr.log"
ynh_secure_remove --file="/var/log/supervisor/$app-app-stdout.log"
ynh_secure_remove --file="/var/log/supervisor/$app-worker-stderr.log"
ynh_secure_remove --file="/var/log/supervisor/$app-worker-stdout.log"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	tmpdir="$(mktemp -d)"
	cp "$install_dir/config/secrets.yml" "$tmpdir/secrets.yml"
	cp "$install_dir/config/database.yml" "$tmpdir/database.yml"
#REMOVEME? 	ynh_secure_remove --file="$install_dir"

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep="config/secrets.yml config/database.yml"

	cp -f "$tmpdir/secrets.yml" "$install_dir/config/secrets.yml"
	cp -f "$tmpdir/database.yml" "$install_dir/config/database.yml"
	ynh_secure_remove --file="$tmpdir"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=1

ynh_exec_warn_less ynh_install_ruby --ruby_version=$ruby_version
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="secrets.yml" --destination="$install_dir/config/secrets.yml"
chmod 400 "$install_dir/config/secrets.yml"
chown $app:$app "$install_dir/config/secrets.yml"

ynh_add_config --template="database.yml" --destination="$install_dir/config/database.yml"
chmod 400 "$install_dir/config/database.yml"
chown $app:$app "$install_dir/config/database.yml"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	pushd $install_dir
#REMOVEME? 		ynh_secure_remove --file="$install_dir/.cache"
#REMOVEME? 		ynh_secure_remove --file="$install_dir/node_modules"
#REMOVEME? 		ynh_secure_remove --file="$install_dir/tmp/cache"
		ynh_use_ruby
		ynh_exec_warn_less $ynh_gem install bundler
		ynh_exec_warn_less bin/bundle config --global frozen 1
		ynh_exec_warn_less bin/bundle config set --local without 'development test doc'
		ynh_exec_warn_less bin/bundle install
		ynh_exec_warn_less bin/bundle binstubs --all
		ynh_use_nodejs
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install
		ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;" --database="$db_name"
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production $ynh_ruby_load_path $ld_preload bin/bundle exec rake db:migrate
		ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH NOSUPERUSER;" --database="$db_name"
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production $ynh_ruby_load_path $ld_preload bin/bundle exec rake assets:precompile
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn cache clean --all
	popd
fi

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies
#REMOVEME? ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"
#REMOVEME? ynh_secure_remove --file="$install_dir/.cache"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config --service="$app-app" --template="fab-manager-app.service"
ynh_add_systemd_config --service="$app-worker" --template="fab-manager-worker.service"

yunohost service add "$app-app" --description="$app app service"
yunohost service add "$app-worker" --description="$app worker service"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=${app}-app --action="start" --log_path=systemd --line_match="Listening on"
ynh_systemd_action --service_name=${app}-worker --action="start" --log_path=systemd --line_match="Schedules Loaded"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
